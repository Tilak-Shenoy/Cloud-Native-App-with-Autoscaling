apiVersion: v1
kind: Service
metadata:
  name: cloudapp-service
  namespace: cloudapp
  labels:
    app: cloudapp
    component: web
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP  # Use ClusterIP for internal communication, ALB will handle external traffic
  selector:
    app: cloudapp
    component: web
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 5000
    protocol: TCP
  sessionAffinity: None
---
# Headless service for StatefulSet scenarios or service discovery
apiVersion: v1
kind: Service
metadata:
  name: cloudapp-headless
  namespace: cloudapp
  labels:
    app: cloudapp
    component: web
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: cloudapp
    component: web
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
---
# Service for monitoring/metrics collection
apiVersion: v1
kind: Service
metadata:
  name: cloudapp-metrics
  namespace: cloudapp
  labels:
    app: cloudapp
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: cloudapp
    component: web
  ports:
  - name: metrics
    port: 5000
    targetPort: 5000
    protocol: TCP
